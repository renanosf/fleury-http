{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/fleury-http/src/lib/features/httpClient/implementations/http-axios.ts","../../../projects/fleury-http/src/lib/features/oauth/interfaces/ioauth.ts","../../../projects/fleury-http/src/lib/features/httpClient/http-client-factory.ts","../../../projects/fleury-http/src/lib/features/oauth/utils/extract-code.ts","../../../projects/fleury-http/src/lib/features/storage/interfaces/istorage.ts","../../../projects/fleury-http/src/lib/features/oauth/utils/base64.ts","../../../projects/fleury-http/src/lib/features/oauth/implementations/oauth-sensedia-service.ts","../../../projects/fleury-http/src/lib/features/oauth/oauth-service.ts","../../../projects/fleury-http/src/lib/features/storage/implementations/storage-local.ts","../../../projects/fleury-http/src/lib/interfaces/ifleury-http.ts","../../../projects/fleury-http/src/lib/features/storage/implementations/storage-session.ts","../../../projects/fleury-http/src/lib/features/storage/implementations/storage-memory.ts","../../../projects/fleury-http/src/lib/features/storage/storage-factory.ts","../../../projects/fleury-http/src/lib/features/interceptors/pre/validators.ts","../../../projects/fleury-http/src/lib/fleury-http.ts","../../../projects/fleury-http/src/lib/features/interceptors/pre/modifiers.ts","../../../projects/fleury-http/src/lib/features/interceptors/pos/validators.ts","../../../projects/fleury-http/src/lib/features/interceptors/implementations/interceptor-axios.ts","../../../projects/fleury-http/src/lib/features/interceptors/interceptor-service.ts","../../../projects/fleury-http/src/lib/features/events/fleury-http-events.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__values","o","s","m","i","OauthFlows","HttpAxios","baseUrl","axiosInstance","axios","baseURL","prototype","post","uri","data","headers","response","_a","status","statusText","HttpClientFactory","createHttpService","config","StorageType","extractCode","key","redirectUrl","index","indexOf","substring","isBrowser","Function","OauthSensediaService","http","appConfig","oauth","application","callGrantCode","client_id","clientId","redirect_uri","Error","callAccessToken","code","secret","authorization","str","btoa","Buffer","toString","grant_type","Authorization","callAccessTokenImplicit","recaptcha","access_token","OauthService","fleuryHttpEvents","httpClientService","storageService","oauthProvider","token","get","currentToken","JSON","parse","lazyAuhtorization","isReady","refreshToken","grantFlow","accessToken","expires","Date","getTime","expires_in","MILLISECONDS","refresh_token","console","log","set","stringify","implicitFlow","isTokenValid","getAccessToken","getApplicationId","_this","promise","flow","IMPLICIT","GRANT","catch","err","onError","InstanceType","StorageLocal","localStorage","getItem","setItem","StorageSession","sessionStorage","StorageMemory","StorageFactory","createStorageService","storageType","Memory","SessionStorage","LocalStorage","fleuryhttpConnector","events","instance","preValidators","req","url","filter","preModifiers","pipe","take","subscribe","oauthService","posValidators","res","AxiosInterceptor","requestTransformation","httpRequest","addBaseUrl","handle","interceptors","request","use","preModifiers_1","preModifiers_1_1","fn","_b","find","httpResponse","forEach","InterceptorService","ouathService","axiosInterceptor","Array","isArray","instances","handleInstance","type","Axios","checkIfInstanceAlreadyExists","addInstance","FleuryHttpEvents","Subject","BehaviorSubject","FleuryHttp","interceptorService","FleuryHttpSingleton","fleuryHttp","asObservable","httpInstance","FleuryHttpFactory","createFleuryHttp"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import axios, { AxiosInstance } from 'axios';\r\nimport { IHttpClientService, FleuryHttpResponse } from '../interfaces/ihttp-client';\r\n\r\nexport class HttpAxios implements IHttpClientService {\r\n    private axiosInstance: AxiosInstance;\r\n    constructor(private baseUrl: string) {\r\n        this.axiosInstance = axios.create({\r\n            baseURL: this.baseUrl\r\n        });\r\n    }\r\n\r\n    async post(uri: string, data?: any, headers?: {[key: string]: string}): Promise<FleuryHttpResponse> {\r\n        const response = await this.axiosInstance.post(uri, data, {\r\n            headers,\r\n        });\r\n\r\n        const fleuryResponse: FleuryHttpResponse = {\r\n            body: response.data,\r\n            headers: response.headers,\r\n            status: response.status,\r\n            statusText: response.statusText,\r\n        };\r\n\r\n        return fleuryResponse;\r\n    }\r\n}\r\n","export interface IOauthService {\r\n    callGrantCode();\r\n    callAccessToken(code: string);\r\n}\r\n\r\nexport interface IOauthApplication {\r\n    clientId: string;\r\n    secret?: string;\r\n}\r\n\r\nexport enum OauthFlows {\r\n    GRANT,\r\n    IMPLICIT\r\n}\r\n\r\nexport interface IOauth {\r\n    application: IOauthApplication;\r\n    flow: OauthFlows;\r\n}\r\n\r\nexport interface IOauthToken {\r\n    accessToken: string;\r\n    expires: number;\r\n    refreshToken?: string;\r\n}","import { IFleuryHttp } from '../../interfaces/ifleury-http';\r\nimport { HttpAxios } from './implementations/http-axios';\r\n\r\nexport default class HttpClientFactory {\r\n    public static createHttpService(config: IFleuryHttp): HttpAxios {\r\n        return new HttpAxios(config.baseUrl);\r\n    }\r\n}\r\n","export const extractCode = (key: string, redirectUrl:string) => {\r\n    const index = redirectUrl.indexOf(key) + key.length;\r\n    return redirectUrl.substring(index);\r\n};\r\n","export enum StorageType {\r\n    LocalStorage,\r\n    SessionStorage,\r\n    Memory\r\n}\r\n\r\nexport interface IStorageService {\r\n    get(key: string): any;\r\n    set(key: string, value: string): void;\r\n}\r\n","const isBrowser=new Function(\"try {return this===window;}catch(e){ return false;}\");\r\n\r\nexport const toBase64 = (str: string) => {\r\n    if (isBrowser()) return btoa(str);\r\n    else return new Buffer(str).toString('base64');\r\n}","import { IOauthService, IOauthApplication } from '../interfaces/ioauth';\r\nimport { IFleuryHttp } from '../../../interfaces/ifleury-http';\r\nimport { IHttpClientService } from '../../httpClient/interfaces/ihttp-client';\r\nimport { extractCode } from '../utils/extract-code';\r\nimport { toBase64 } from '../utils/base64';\r\n\r\nexport class OauthSensediaService implements IOauthService {\r\n    private appConfig: IOauthApplication;\r\n    \r\n    constructor(private config: IFleuryHttp, private http: IHttpClientService) {\r\n        this.appConfig = this.config.oauth.application;\r\n    }\r\n\r\n    async callGrantCode(): Promise<string> {\r\n        const response = await this.http.post(\r\n            '/oauth/grant-code',\r\n            {\r\n                client_id: this.appConfig.clientId,\r\n                redirect_uri: `${this.config.baseUrl}/oauth/access-token`,\r\n            },\r\n        );\r\n\r\n        if (response.status === 201) {\r\n            const code = extractCode('?code=', response.body.redirect_uri);\r\n            return code;\r\n        } else {\r\n            throw new Error('Unable to call grant');\r\n        }\r\n    }\r\n\r\n    async callAccessToken(code: string): Promise<any> {\r\n        const key: string = `${this.appConfig.clientId}:${this.appConfig.secret}`;\r\n        const authorization: string = `Basic ${toBase64(key)}`;\r\n        \r\n        const response = await this.http.post(\r\n            '/oauth/access-token',\r\n            {\r\n                grant_type: 'authorization_code',\r\n                code,\r\n            },\r\n            {\r\n                client_id: this.appConfig.clientId,\r\n                Authorization: authorization,\r\n            },\r\n        );\r\n\r\n        if (response.status === 201) {\r\n            return response.body\r\n        } else {\r\n            throw new Error('Unable to call access token');\r\n        }\r\n    }\r\n\r\n    async callAccessTokenImplicit(): Promise<any> {\r\n        const response = await this.http.post(\r\n            '/oauth/access-token',\r\n            {\r\n                client_id: this.appConfig.clientId,\r\n                grant_type: 'implicit',\r\n                recaptcha: true,\r\n                redirect_uri: `${this.config.baseUrl}/oauth/access-token`\r\n            }\r\n        );\r\n\r\n        if (response.status === 201) {\r\n            response.body.access_token = extractCode('?access_token=', response.body.redirect_uri);\r\n            return response.body;\r\n        } else {\r\n            throw new Error('Unable to call access token');\r\n        }\r\n    }\r\n}\r\n","import { OauthFlows, IOauthToken } from './interfaces/ioauth';\r\nimport { IFleuryHttp } from '../../interfaces/ifleury-http';\r\nimport { OauthSensediaService } from './implementations/oauth-sensedia-service';\r\nimport { IHttpClientService } from '../httpClient/interfaces/ihttp-client';\r\nimport { IStorageService } from '../storage/interfaces/istorage';\r\nimport { FleuryHttpEvents } from '../events/fleury-http-events';\r\n\r\nexport class OauthService {\r\n    private oauthProvider: OauthSensediaService;\r\n    private clientId: string;\r\n    private static MILLISECONDS: number = 1000;\r\n    private currentToken: IOauthToken;\r\n\r\n    constructor(\r\n        private config: IFleuryHttp,\r\n        private fleuryHttpEvents: FleuryHttpEvents,\r\n        private httpClientService: IHttpClientService,\r\n        private storageService: IStorageService\r\n    ) {\r\n        this.oauthProvider = new OauthSensediaService(this.config, this.httpClientService);\r\n        this.clientId = this.config.oauth.application.clientId;\r\n        const token = this.storageService.get(this.clientId);\r\n        if (token) this.currentToken = JSON.parse(token);\r\n\r\n        if (this.config.lazyAuhtorization) {\r\n            this.fleuryHttpEvents.isReady.next(true);\r\n        } else {\r\n            if (!this.currentToken) this.refreshToken();\r\n            else this.fleuryHttpEvents.isReady.next(true);\r\n        }\r\n    }\r\n\r\n    private async grantFlow(): Promise<string> {\r\n        const code = await this.oauthProvider.callGrantCode();\r\n        const response = await this.oauthProvider.callAccessToken(code);\r\n        \r\n        this.currentToken = {\r\n            accessToken: response.access_token,\r\n            expires: new Date().getTime() + (response.expires_in * OauthService.MILLISECONDS),\r\n            refreshToken: response.refresh_token\r\n        };\r\n\r\n        console.log(this.currentToken);\r\n\r\n        this.storageService.set(this.clientId, JSON.stringify(this.currentToken));\r\n\r\n        return this.currentToken.accessToken;\r\n    }\r\n\r\n    private async implicitFlow(): Promise<any> {\r\n        const response = await this.oauthProvider.callAccessTokenImplicit();\r\n\r\n        this.currentToken = {\r\n            accessToken: response.access_token,\r\n            expires: new Date().getTime() + (response.expires_in * OauthService.MILLISECONDS),\r\n        };\r\n\r\n        this.storageService.set(this.clientId, JSON.stringify(this.currentToken));\r\n\r\n        return this.currentToken.accessToken;\r\n    }\r\n\r\n    public isTokenValid(): boolean {\r\n        return this.currentToken ? new Date().getTime() < this.currentToken.expires : false;\r\n    }\r\n\r\n    public getAccessToken(): string {\r\n        return this.currentToken.accessToken;\r\n    }\r\n\r\n    public getApplicationId(): string {\r\n        return this.clientId;\r\n    }\r\n\r\n    refreshToken(): void {\r\n        let promise: Promise<any> = null;\r\n        this.fleuryHttpEvents.isReady.next(false);\r\n        \r\n        switch (this.config.oauth.flow) {\r\n            case OauthFlows.IMPLICIT:\r\n                promise = this.implicitFlow();\r\n                break;\r\n            case OauthFlows.GRANT:\r\n            default:\r\n                promise = this.grantFlow();\r\n                break;\r\n        }\r\n\r\n        promise.then(() => {\r\n            this.fleuryHttpEvents.isReady.next(true);\r\n        }).catch((err) => {\r\n            this.fleuryHttpEvents.onError.next(err);\r\n        });\r\n    }\r\n}\r\n","/* eslint-disable class-methods-use-this */\r\nimport { IStorageService } from '../interfaces/istorage';\r\n\r\nexport class StorageLocal implements IStorageService {\r\n    get(key: string) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    set(key: string, value: string) {\r\n        localStorage.setItem(key, value);\r\n    }\r\n}\r\n","import { IOauth } from '../features/oauth/interfaces/ioauth';\r\nimport { StorageType } from '../features/storage/interfaces/istorage';\r\nimport { AxiosInstance } from 'axios';\r\nimport { IFleuryHttpEvents } from '../features/events/fleury-http-events';\r\n\r\nexport enum InstanceType {\r\n    Axios\r\n}\r\n\r\nexport interface IInstance {\r\n    type?: InstanceType;\r\n    value: AxiosInstance;\r\n}\r\n\r\nexport interface IFleuryHttp {\r\n    oauth: IOauth;\r\n    baseUrl: string;\r\n    instances?: Array<IInstance>\r\n    storageType?: StorageType;\r\n    lazyAuhtorization?: boolean;\r\n}\r\n\r\nexport interface IFleuryHttpConnector {\r\n    addInstance(instance: IInstance): void;\r\n    events: IFleuryHttpEvents\r\n}","/* eslint-disable class-methods-use-this */\r\nimport { IStorageService } from '../interfaces/istorage';\r\n\r\nexport class StorageSession implements IStorageService {\r\n    get(key: string) {\r\n        return sessionStorage.getItem(key);\r\n    }\r\n\r\n    set(key: string, value: string) {\r\n        sessionStorage.setItem(key, value);\r\n    }\r\n}\r\n","import { IStorageService } from '../interfaces/istorage';\r\n\r\nexport class StorageMemory implements IStorageService {\r\n    private data: any = {};\r\n\r\n    get(key: string) {\r\n        return this.data[key];\r\n    }\r\n\r\n    set(key: string, value: string) {\r\n        this.data[key] = value;\r\n    }\r\n}\r\n","import { IFleuryHttp } from '../../interfaces/ifleury-http';\r\nimport { StorageType, IStorageService } from './interfaces/istorage';\r\nimport { StorageLocal } from './implementations/storage-local';\r\nimport { StorageSession } from './implementations/storage-session';\r\nimport { StorageMemory } from './implementations/storage-memory';\r\n\r\nconst providers: any = {};\r\n\r\nexport class StorageFactory {\r\n    public static createStorageService(config: IFleuryHttp): IStorageService {\r\n        switch(config.storageType) {\r\n            case StorageType.Memory:\r\n                return new StorageMemory();\r\n            case StorageType.SessionStorage:\r\n                return new StorageSession();\r\n            case StorageType.LocalStorage:\r\n            default:\r\n                return new StorageLocal();\r\n        }\r\n    }\r\n}","import { FleuryInterceptorRequest } from '../interfaces/iintercetors';\r\n\r\n// Se dominio eh o mesmo do gateway entao continuar interceptor\r\n// Se nao possuir dominio incluir a url base\r\nconst verifyDomain = (req: FleuryInterceptorRequest): boolean => {\r\n    if (req.url.indexOf(\"http://\") == 0 || req.url.indexOf(\"https://\") == 0) {\r\n        return req.url.indexOf(req.baseUrl) !== -1;    \r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n// Se nao encontra whitelabel entao continuar interceptor\r\nconst whiteLabelUris = (req: FleuryInterceptorRequest): boolean => {\r\n    const WHITE_LIST = ['/oauth/'];\r\n    \r\n    return !WHITE_LIST.filter(uri => {\r\n        return req.url.indexOf(uri) !== -1;\r\n    }).length;\r\n}\r\n\r\nexport const preValidators: Array<(req: FleuryInterceptorRequest) => boolean> = [\r\n    verifyDomain,\r\n    whiteLabelUris\r\n];","import { IFleuryHttp, IInstance, IFleuryHttpConnector } from './interfaces/ifleury-http';\r\nimport { IHttpClientService } from './features/httpClient/interfaces/ihttp-client';\r\nimport HttpClientFactory from './features/httpClient/http-client-factory';\r\nimport { OauthService } from './features/oauth/oauth-service';\r\nimport { StorageFactory } from './features/storage/storage-factory';\r\nimport { InterceptorService } from './features/interceptors/interceptor-service';\r\nimport { FleuryHttpEvents, IFleuryHttpEvents } from './features/events/fleury-http-events';\r\nimport { IStorageService } from './features/storage/interfaces/istorage';\r\n\r\nexport class FleuryHttp {\r\n    public fleuryHttpEvents: FleuryHttpEvents = new FleuryHttpEvents();\r\n\r\n    private httpClientService: IHttpClientService;\r\n\r\n    private storageService: IStorageService;\r\n\r\n    public oauthService: OauthService;\r\n\r\n    public interceptorService: InterceptorService;\r\n\r\n    constructor(private config: IFleuryHttp) {\r\n        this.httpClientService = HttpClientFactory.createHttpService(this.config);\r\n        this.storageService = StorageFactory.createStorageService(this.config);\r\n        \r\n        this.oauthService = new OauthService(\r\n            this.config,\r\n            this.fleuryHttpEvents,\r\n            this.httpClientService,\r\n            this.storageService\r\n        );\r\n\r\n        this.interceptorService = new InterceptorService(\r\n            this.config,\r\n            this.fleuryHttpEvents,\r\n            this.oauthService\r\n        );\r\n    }\r\n}\r\n\r\nconst FleuryHttpSingleton = (function(){\r\n    let fleuryhttpConnector: IFleuryHttpConnector;\r\n    \r\n    let instance: FleuryHttp = null;\r\n\r\n    let events: IFleuryHttpEvents;\r\n\r\n    return function(fleuryHttp) {\r\n        if (instance) return fleuryhttpConnector;\r\n        \r\n        instance = fleuryHttp;\r\n\r\n        if (!instance) return null;\r\n\r\n        events = {\r\n            isReady: instance.fleuryHttpEvents.isReady.asObservable(),\r\n            onError: instance.fleuryHttpEvents.onError.asObservable()\r\n        };\r\n\r\n        fleuryhttpConnector = {\r\n            addInstance: (httpInstance: IInstance) => {\r\n                instance.interceptorService.addInstance(httpInstance);\r\n            },\r\n            events: events\r\n        }\r\n\r\n        return fleuryhttpConnector;\r\n    };\r\n})();\r\n\r\nexport class FleuryHttpFactory {\r\n    public static createFleuryHttp(config: IFleuryHttp): IFleuryHttpConnector {\r\n        if (!FleuryHttpSingleton(null)) {\r\n            FleuryHttpSingleton(new FleuryHttp(config));\r\n        }\r\n\r\n        return FleuryHttpSingleton(null);\r\n    }\r\n}","import { FleuryInterceptorRequest } from '../interfaces/iintercetors';\r\nimport { filter, take, subscribeOn } from 'rxjs/operators';\r\n\r\nconst insertBaseUrl = async (req: FleuryInterceptorRequest): Promise<FleuryInterceptorRequest> => {\r\n    return new Promise((resolve) => {\r\n        req.url = req.url.indexOf(req.baseUrl) === -1 ? req.baseUrl + req.url : req.url;\r\n        resolve(req);\r\n    });\r\n}\r\n\r\n// This function refresh the token if necessary\r\nconst isTokenValid = async (req: FleuryInterceptorRequest): Promise<FleuryInterceptorRequest> => {\r\n    return new Promise((resolve) => {\r\n        req.fleuryHttpEvents.isReady\r\n        .pipe(\r\n            filter(value => value),\r\n            take(1)\r\n        ).subscribe(() => {\r\n            if (!req.oauthService.isTokenValid()) req.oauthService.refreshToken();\r\n            resolve(req);\r\n        });\r\n    });\r\n}\r\n\r\n// Se dominio eh o mesmo do gateway entao continuar interceptor\r\nconst insertAccessToken = async (req: FleuryInterceptorRequest): Promise<FleuryInterceptorRequest> => {\r\n    return new Promise((resolve) => {\r\n        req.fleuryHttpEvents.isReady\r\n        .pipe(\r\n            filter(value => value),\r\n            take(1),\r\n        ).subscribe(() => {\r\n            req.headers['access_token'] = req.oauthService.getAccessToken();\r\n            req.headers['client_id'] = req.oauthService.getApplicationId();\r\n            resolve(req);\r\n        });\r\n    });\r\n};\r\n\r\nexport const preModifiers: Array<(req: FleuryInterceptorRequest) => Promise<FleuryInterceptorRequest>> = [\r\n    insertBaseUrl,\r\n    isTokenValid,\r\n    insertAccessToken\r\n];","import { FleuryInterceptorResponse } from '../interfaces/iintercetors';\r\n\r\nconst verifyResponseStatus = (res: FleuryInterceptorResponse): boolean => {\r\n    if (res.status === 401) res.oauthService.refreshToken();\r\n    return true;\r\n};\r\n\r\nexport const posValidators: Array<(res: FleuryInterceptorResponse) => boolean> = [\r\n    verifyResponseStatus\r\n];","import { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { IInterceptorService } from '../interfaces/iintercetors';\r\nimport { FleuryHttpEvents } from '../../events/fleury-http-events';\r\nimport { OauthService } from '../../oauth/oauth-service';\r\nimport { IFleuryHttp } from '../../../interfaces/ifleury-http';\r\nimport { FleuryInterceptorRequest } from '../interfaces/iintercetors';\r\n\r\nimport { preValidators } from '../pre/validators';\r\nimport { preModifiers } from '../pre/modifiers';\r\nimport { posValidators } from '../pos/validators';\r\n\r\nexport class AxiosInterceptor implements IInterceptorService {\r\n    constructor(\r\n        private config: IFleuryHttp,\r\n        private fleuryHttpEvents: FleuryHttpEvents,\r\n        private oauthService: OauthService\r\n    ) {}\r\n\r\n    requestTransformation(httpRequest: AxiosRequestConfig): FleuryInterceptorRequest {\r\n        const hasBaseUrl = httpRequest.url.indexOf(this.config.baseUrl);\r\n        const addBaseUrl = hasBaseUrl === -1 ? this.config.baseUrl : '';\r\n        \r\n        return {\r\n            baseUrl: this.config.baseUrl,\r\n            headers: httpRequest.headers,\r\n            url: addBaseUrl + httpRequest.url,\r\n            body: httpRequest.data,\r\n            fleuryHttpEvents: this.fleuryHttpEvents,\r\n            oauthService: this.oauthService\r\n        };\r\n    }\r\n\r\n    handle(instance: AxiosInstance) {\r\n        instance.interceptors.request.use((req) => this.preValidators(req));\r\n        instance.interceptors.response.use((req) => this.posValidators(req));\r\n    }\r\n\r\n    private async preModifiers(httpRequest: AxiosRequestConfig): Promise<AxiosRequestConfig> {\r\n        let req = this.requestTransformation(httpRequest);\r\n        \r\n        for (let fn of preModifiers) {\r\n            req = await fn(req);\r\n        }\r\n\r\n        httpRequest.headers = req.headers;\r\n        httpRequest.data = req.body;\r\n        httpRequest.url = req.url;\r\n\r\n        return httpRequest;\r\n    }\r\n\r\n    private async preValidators(httpRequest: AxiosRequestConfig): Promise<AxiosRequestConfig> {\r\n        const req = this.requestTransformation(httpRequest);\r\n\r\n        const error = preValidators.find(fn => {\r\n            return fn(req) === false;\r\n        });\r\n\r\n        return error ? httpRequest : this.preModifiers(httpRequest)\r\n    }\r\n\r\n    private async posValidators(httpResponse: AxiosResponse): Promise<AxiosResponse> {\r\n        posValidators.forEach((fn) => {\r\n            fn({\r\n                oauthService: this.oauthService,\r\n                status: httpResponse.status\r\n            });\r\n        });\r\n\r\n        return httpResponse;\r\n    }\r\n}","import { IFleuryHttp, IInstance, InstanceType } from '../../interfaces/ifleury-http';\r\nimport { AxiosInterceptor } from './implementations/interceptor-axios';\r\nimport { FleuryHttpEvents } from '../events/fleury-http-events';\r\nimport { OauthService } from '../oauth/oauth-service';\r\n\r\nexport class InterceptorService {\r\n\r\n    private axiosInterceptor: AxiosInterceptor;\r\n\r\n    constructor(\r\n        private config: IFleuryHttp,\r\n        private fleuryHttpEvents: FleuryHttpEvents,\r\n        private ouathService: OauthService\r\n    ) {\r\n        this.axiosInterceptor = new AxiosInterceptor(this.config, this.fleuryHttpEvents, this.ouathService);\r\n        if (Array.isArray(this.config.instances)) this.config.instances.forEach(i => this.handleInstance(i));\r\n    }\r\n\r\n    private handleInstance(instance: IInstance) {\r\n        switch (instance.type) {\r\n            case InstanceType.Axios:\r\n            default:\r\n                this.axiosInterceptor.handle(instance.value);\r\n        }\r\n    }\r\n\r\n    private checkIfInstanceAlreadyExists(instance: IInstance): boolean {\r\n        const found = this.config.instances.find((i: IInstance) => {\r\n            return i.value === instance.value;\r\n        });\r\n\r\n        return !!found;\r\n    }\r\n\r\n    addInstance(instance: IInstance): void {\r\n        if (!Array.isArray(this.config.instances)) this.config.instances = [];\r\n        if (this.checkIfInstanceAlreadyExists(instance)) return;\r\n        this.handleInstance(instance);\r\n        this.config.instances.push(instance);\r\n    }\r\n}","import { BehaviorSubject, Subject, Observable } from \"rxjs\";\r\n\r\nexport interface IFleuryHttpEvents {\r\n    onError: Observable<any>;\r\n    isReady: Observable<boolean>;\r\n}\r\n\r\nexport class FleuryHttpEvents {\r\n    // Event to emit when Oauth fails\r\n    public onError:Subject<any> = new Subject();\r\n    \r\n    // Event to know if client is ready to make request\r\n    // Get the oauth token if ready\r\n    public isReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n}"]}